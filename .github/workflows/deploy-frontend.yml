name: Deploy Frontend

on:
  push:
    branches:
      - main
    paths:
      - 'llm-frontend/**'
      - '.github/workflows/deploy-frontend.yml'
  workflow_dispatch:  # Allow manual trigger

permissions:
  id-token: write  # Required for OIDC
  contents: read

jobs:
  deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: llm-frontend/package-lock.json

      - name: Install dependencies
        working-directory: llm-frontend
        run: npm ci

      - name: Build frontend
        working-directory: llm-frontend
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
        run: npm run build

      - name: Sync to S3
        working-directory: llm-frontend
        run: |
          aws s3 sync dist/ s3://${{ secrets.FRONTEND_BUCKET }}/ \
            --delete \
            --cache-control "public, max-age=31536000, immutable" \
            --exclude "index.html"

          # Separate sync for index.html with no-cache
          aws s3 cp dist/index.html s3://${{ secrets.FRONTEND_BUCKET }}/index.html \
            --cache-control "no-cache, no-store, must-revalidate"

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      - name: Deployment summary
        run: |
          echo "‚úÖ Frontend deployed successfully!"
          echo "üåê CloudFront URL: https://$(aws cloudfront get-distribution --id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --query 'Distribution.DomainName' --output text)"
          echo "üì¶ S3 Bucket: ${{ secrets.FRONTEND_BUCKET }}"
          echo "üîÑ Cache invalidated"
